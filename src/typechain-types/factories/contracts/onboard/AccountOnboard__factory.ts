/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AccountOnboard,
  AccountOnboardInterface,
} from "../../../contracts/onboard/AccountOnboard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userKey1",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userKey2",
        type: "bytes",
      },
    ],
    name: "AccountOnboarded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signedEK",
        type: "bytes",
      },
    ],
    name: "onboardAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108df806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063afaea1bd14610030575b600080fd5b61004a600480360381019061004591906104f1565b61004c565b005b60008061005b868686866100b7565b915091503373ffffffffffffffffffffffffffffffffffffffff167ffc83efa19b7c2bc399a672494bb0af52f9bbd678357edf30e55b5ac4e65878ba83836040516100a7929190610602565b60405180910390a2505050505050565b606080600086869050858590506100ce9190610672565b67ffffffffffffffff8111156100e7576100e66106a6565b5b6040519080825280601f01601f1916602001820160405280156101195781602001600182028036833780820191505090505b50905060005b8585905081101561019c5785858281811061013d5761013c6106d5565b5b9050013560f81c60f81b82828151811061015a576101596106d5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061019490610704565b91505061011f565b5060005b8787905081101561022b578787828181106101be576101bd6106d5565b5b9050013560f81c60f81b8282888890506101d89190610672565b815181106101e9576101e86106d5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061022390610704565b9150506101a0565b506000606473ffffffffffffffffffffffffffffffffffffffff1663a85f0ca2836040518263ffffffff1660e01b8152600401610268919061074c565b6000604051808303816000875af1158015610287573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102b09190610860565b9050600061010067ffffffffffffffff8111156102d0576102cf6106a6565b5b6040519080825280601f01601f1916602001820160405280156103025781602001600182028036833780820191505090505b509050600061010067ffffffffffffffff811115610323576103226106a6565b5b6040519080825280601f01601f1916602001820160405280156103555781602001600182028036833780820191505090505b50905060005b82518110156103d757838181518110610377576103766106d5565b5b602001015160f81c60f81b838281518110610395576103946106d5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806103cf90610704565b91505061035b565b5060005b81518110156104645783610100826103f39190610672565b81518110610404576104036106d5565b5b602001015160f81c60f81b828281518110610422576104216106d5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061045c90610704565b9150506103db565b508181955095505050505094509492505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126104b1576104b061048c565b5b8235905067ffffffffffffffff8111156104ce576104cd610491565b5b6020830191508360018202830111156104ea576104e9610496565b5b9250929050565b6000806000806040858703121561050b5761050a610482565b5b600085013567ffffffffffffffff81111561052957610528610487565b5b6105358782880161049b565b9450945050602085013567ffffffffffffffff81111561055857610557610487565b5b6105648782880161049b565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b838110156105ac578082015181840152602081019050610591565b60008484015250505050565b6000601f19601f8301169050919050565b60006105d482610572565b6105de818561057d565b93506105ee81856020860161058e565b6105f7816105b8565b840191505092915050565b6000604082019050818103600083015261061c81856105c9565b9050818103602083015261063081846105c9565b90509392505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061067d82610639565b915061068883610639565b92508282019050808211156106a05761069f610643565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061070f82610639565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361074157610740610643565b5b600182019050919050565b6000602082019050818103600083015261076681846105c9565b905092915050565b600080fd5b61077c826105b8565b810181811067ffffffffffffffff8211171561079b5761079a6106a6565b5b80604052505050565b60006107ae610478565b90506107ba8282610773565b919050565b600067ffffffffffffffff8211156107da576107d96106a6565b5b6107e3826105b8565b9050602081019050919050565b60006108036107fe846107bf565b6107a4565b90508281526020810184848401111561081f5761081e61076e565b5b61082a84828561058e565b509392505050565b600082601f8301126108475761084661048c565b5b81516108578482602086016107f0565b91505092915050565b60006020828403121561087657610875610482565b5b600082015167ffffffffffffffff81111561089457610893610487565b5b6108a084828501610832565b9150509291505056fea264697066735822122008a28764c0a33b60005dfb08d098df0c5768e22ced89a1564c0f66fdcda74e8c64736f6c63430008130033";

type AccountOnboardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountOnboardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountOnboard__factory extends ContractFactory {
  constructor(...args: AccountOnboardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountOnboard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountOnboard__factory {
    return super.connect(runner) as AccountOnboard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountOnboardInterface {
    return new Interface(_abi) as AccountOnboardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountOnboard {
    return new Contract(address, _abi, runner) as unknown as AccountOnboard;
  }
}
