/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../contracts/token/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f9938038062001f998339818101604052810190620000379190620003b9565b838381600390816200004a9190620006b4565b5080600490816200005c9190620006b4565b5050506200007f62000073620000b560201b60201c565b620000bd60201b60201c565b81600560146101000a81548160ff021916908360ff160217905550620000ab81620000bd60201b60201c565b505050506200079b565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001ec82620001a1565b810181811067ffffffffffffffff821117156200020e576200020d620001b2565b5b80604052505050565b60006200022362000183565b9050620002318282620001e1565b919050565b600067ffffffffffffffff821115620002545762000253620001b2565b5b6200025f82620001a1565b9050602081019050919050565b60005b838110156200028c5780820151818401526020810190506200026f565b60008484015250505050565b6000620002af620002a98462000236565b62000217565b905082815260208101848484011115620002ce57620002cd6200019c565b5b620002db8482856200026c565b509392505050565b600082601f830112620002fb57620002fa62000197565b5b81516200030d84826020860162000298565b91505092915050565b600060ff82169050919050565b6200032e8162000316565b81146200033a57600080fd5b50565b6000815190506200034e8162000323565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003818262000354565b9050919050565b620003938162000374565b81146200039f57600080fd5b50565b600081519050620003b38162000388565b92915050565b60008060008060808587031215620003d657620003d56200018d565b5b600085015167ffffffffffffffff811115620003f757620003f662000192565b5b6200040587828801620002e3565b945050602085015167ffffffffffffffff81111562000429576200042862000192565b5b6200043787828801620002e3565b93505060406200044a878288016200033d565b92505060606200045d87828801620003a2565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004bc57607f821691505b602082108103620004d257620004d162000474565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200053c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004fd565b620005488683620004fd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005956200058f620005898462000560565b6200056a565b62000560565b9050919050565b6000819050919050565b620005b18362000574565b620005c9620005c0826200059c565b8484546200050a565b825550505050565b600090565b620005e0620005d1565b620005ed818484620005a6565b505050565b5b81811015620006155762000609600082620005d6565b600181019050620005f3565b5050565b601f82111562000664576200062e81620004d8565b6200063984620004ed565b8101602085101562000649578190505b620006616200065885620004ed565b830182620005f2565b50505b505050565b600082821c905092915050565b6000620006896000198460080262000669565b1980831691505092915050565b6000620006a4838362000676565b9150826002028217905092915050565b620006bf8262000469565b67ffffffffffffffff811115620006db57620006da620001b2565b5b620006e78254620004a3565b620006f482828562000619565b600060209050601f8311600181146200072c576000841562000717578287015190505b62000723858262000696565b86555062000793565b601f1984166200073c86620004d8565b60005b8281101562000766578489015182556001820191506020850194506020810190506200073f565b8683101562000786578489015162000782601f89168262000676565b8355505b6001600288020188555050505b505050505050565b6117ee80620007ab6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f37565b60405180910390f35b610132600480360381019061012d9190610ff2565b6103b4565b60405161013f919061104d565b60405180910390f35b6101506103d7565b60405161015d9190611077565b60405180910390f35b610180600480360381019061017b9190611092565b6103e1565b60405161018d919061104d565b60405180910390f35b61019e610410565b6040516101ab9190611101565b60405180910390f35b6101ce60048036038101906101c99190610ff2565b610427565b6040516101db919061104d565b60405180910390f35b6101fe60048036038101906101f99190610ff2565b61045e565b005b61021a6004803603810190610215919061111c565b610474565b6040516102279190611077565b60405180910390f35b6102386104bc565b005b6102426104d0565b60405161024f9190611158565b60405180910390f35b6102606104fa565b60405161026d9190610f37565b60405180910390f35b610290600480360381019061028b9190610ff2565b61058c565b60405161029d919061104d565b60405180910390f35b6102c060048036038101906102bb9190610ff2565b610603565b6040516102cd919061104d565b60405180910390f35b6102f060048036038101906102eb9190611173565b610626565b6040516102fd9190611077565b60405180910390f35b610320600480360381019061031b919061111c565b6106ad565b005b606060038054610331906111e2565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111e2565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610730565b90506103cc818585610738565b600191505092915050565b6000600254905090565b6000806103ec610730565b90506103f9858285610901565b61040485858561098d565b60019150509392505050565b6000600560149054906101000a900460ff16905090565b600080610432610730565b90506104538185856104448589610626565b61044e9190611242565b610738565b600191505092915050565b610466610c03565b6104708282610c81565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104c4610c03565b6104ce6000610dd7565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610509906111e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610535906111e2565b80156105825780601f1061055757610100808354040283529160200191610582565b820191906000526020600020905b81548152906001019060200180831161056557829003601f168201915b5050505050905090565b600080610597610730565b905060006105a58286610626565b9050838110156105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906112e8565b60405180910390fd5b6105f78286868403610738565b60019250505092915050565b60008061060e610730565b905061061b81858561098d565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106b5610c03565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b9061137a565b60405180910390fd5b61072d81610dd7565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e9061140c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080d9061149e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108f49190611077565b60405180910390a3505050565b600061090d8484610626565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109875781811015610979576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109709061150a565b60405180910390fd5b6109868484848403610738565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f39061159c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a629061162e565b60405180910390fd5b610a76838383610e9d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af3906116c0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bea9190611077565b60405180910390a3610bfd848484610ea2565b50505050565b610c0b610730565b73ffffffffffffffffffffffffffffffffffffffff16610c296104d0565b73ffffffffffffffffffffffffffffffffffffffff1614610c7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c769061172c565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce790611798565b60405180910390fd5b610cfc60008383610e9d565b8060026000828254610d0e9190611242565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dbf9190611077565b60405180910390a3610dd360008383610ea2565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ee1578082015181840152602081019050610ec6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f0982610ea7565b610f138185610eb2565b9350610f23818560208601610ec3565b610f2c81610eed565b840191505092915050565b60006020820190508181036000830152610f518184610efe565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8982610f5e565b9050919050565b610f9981610f7e565b8114610fa457600080fd5b50565b600081359050610fb681610f90565b92915050565b6000819050919050565b610fcf81610fbc565b8114610fda57600080fd5b50565b600081359050610fec81610fc6565b92915050565b6000806040838503121561100957611008610f59565b5b600061101785828601610fa7565b925050602061102885828601610fdd565b9150509250929050565b60008115159050919050565b61104781611032565b82525050565b6000602082019050611062600083018461103e565b92915050565b61107181610fbc565b82525050565b600060208201905061108c6000830184611068565b92915050565b6000806000606084860312156110ab576110aa610f59565b5b60006110b986828701610fa7565b93505060206110ca86828701610fa7565b92505060406110db86828701610fdd565b9150509250925092565b600060ff82169050919050565b6110fb816110e5565b82525050565b600060208201905061111660008301846110f2565b92915050565b60006020828403121561113257611131610f59565b5b600061114084828501610fa7565b91505092915050565b61115281610f7e565b82525050565b600060208201905061116d6000830184611149565b92915050565b6000806040838503121561118a57611189610f59565b5b600061119885828601610fa7565b92505060206111a985828601610fa7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111fa57607f821691505b60208210810361120d5761120c6111b3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124d82610fbc565b915061125883610fbc565b92508282019050808211156112705761126f611213565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112d2602583610eb2565b91506112dd82611276565b604082019050919050565b60006020820190508181036000830152611301816112c5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611364602683610eb2565b915061136f82611308565b604082019050919050565b6000602082019050818103600083015261139381611357565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113f6602483610eb2565b91506114018261139a565b604082019050919050565b60006020820190508181036000830152611425816113e9565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611488602283610eb2565b91506114938261142c565b604082019050919050565b600060208201905081810360008301526114b78161147b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f4601d83610eb2565b91506114ff826114be565b602082019050919050565b60006020820190508181036000830152611523816114e7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611586602583610eb2565b91506115918261152a565b604082019050919050565b600060208201905081810360008301526115b581611579565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611618602383610eb2565b9150611623826115bc565b604082019050919050565b600060208201905081810360008301526116478161160b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116aa602683610eb2565b91506116b58261164e565b604082019050919050565b600060208201905081810360008301526116d98161169d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611716602083610eb2565b9150611721826116e0565b602082019050919050565b6000602082019050818103600083015261174581611709565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611782601f83610eb2565b915061178d8261174c565b602082019050919050565b600060208201905081810360008301526117b181611775565b905091905056fea26469706673582212207da0448bfdc1b4626b99faa49f6f833fb75715985ec800f420b1471922d834d864736f6c63430008130033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals_,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimals_,
      initialOwner,
      overrides || {}
    ) as Promise<
      ERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Token__factory {
    return super.connect(runner) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new Interface(_abi) as ERC20TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Token {
    return new Contract(address, _abi, runner) as unknown as ERC20Token;
  }
}
