/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  AccountOnboard,
  AccountOnboardInterface,
} from "../AccountOnboard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userKey1",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userKey2",
        type: "bytes",
      },
    ],
    name: "AccountOnboarded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signedEK",
        type: "bytes",
      },
    ],
    name: "onboardAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class AccountOnboard__factory {
  static readonly abi = _abi;
  static createInterface(): AccountOnboardInterface {
    return new Interface(_abi) as AccountOnboardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountOnboard {
    return new Contract(address, _abi, runner) as unknown as AccountOnboard;
  }
}
