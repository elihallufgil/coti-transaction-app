/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrivateERC20Token,
  PrivateERC20TokenInterface,
} from "../../../contracts/token/PrivateERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "ownerValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "spenderValue",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "senderValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "receiverValue",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "accountEncryptionAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "ownerCiphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "spenderCiphertext",
            type: "uint256",
          },
        ],
        internalType: "struct IPrivateERC20.Allowance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "amount",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "reencryptAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "offBoardAddress",
        type: "address",
      },
    ],
    name: "setAccountEncryptionAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620035ef380380620035ef8339818101604052810190620000379190620003b9565b838381600490816200004a9190620006b4565b5080600590816200005c9190620006b4565b5050506200007f62000073620000b560201b60201c565b620000bd60201b60201c565b81600660146101000a81548160ff021916908360ff160217905550620000ab81620000bd60201b60201c565b505050506200079b565b600033905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001ec82620001a1565b810181811067ffffffffffffffff821117156200020e576200020d620001b2565b5b80604052505050565b60006200022362000183565b9050620002318282620001e1565b919050565b600067ffffffffffffffff821115620002545762000253620001b2565b5b6200025f82620001a1565b9050602081019050919050565b60005b838110156200028c5780820151818401526020810190506200026f565b60008484015250505050565b6000620002af620002a98462000236565b62000217565b905082815260208101848484011115620002ce57620002cd6200019c565b5b620002db8482856200026c565b509392505050565b600082601f830112620002fb57620002fa62000197565b5b81516200030d84826020860162000298565b91505092915050565b600060ff82169050919050565b6200032e8162000316565b81146200033a57600080fd5b50565b6000815190506200034e8162000323565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003818262000354565b9050919050565b620003938162000374565b81146200039f57600080fd5b50565b600081519050620003b38162000388565b92915050565b60008060008060808587031215620003d657620003d56200018d565b5b600085015167ffffffffffffffff811115620003f757620003f662000192565b5b6200040587828801620002e3565b945050602085015167ffffffffffffffff81111562000429576200042862000192565b5b6200043787828801620002e3565b93505060406200044a878288016200033d565b92505060606200045d87828801620003a2565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004bc57607f821691505b602082108103620004d257620004d162000474565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200053c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004fd565b620005488683620004fd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005956200058f620005898462000560565b6200056a565b62000560565b9050919050565b6000819050919050565b620005b18362000574565b620005c9620005c0826200059c565b8484546200050a565b825550505050565b600090565b620005e0620005d1565b620005ed818484620005a6565b505050565b5b81811015620006155762000609600082620005d6565b600181019050620005f3565b5050565b601f82111562000664576200062e81620004d8565b6200063984620004ed565b8101602085101562000649578190505b620006616200065885620004ed565b830182620005f2565b50505b505050565b600082821c905092915050565b6000620006896000198460080262000669565b1980831691505092915050565b6000620006a4838362000676565b9150826002028217905092915050565b620006bf8262000469565b67ffffffffffffffff811115620006db57620006da620001b2565b5b620006e78254620004a3565b620006f482828562000619565b600060209050601f8311600181146200072c576000841562000717578287015190505b62000723858262000696565b86555062000793565b601f1984166200073c86620004d8565b60005b8281101562000766578489015182556001820191506020850194506020810190506200073f565b8683101562000786578489015162000782601f89168262000676565b8355505b6001600288020188555050505b505050505050565b612e4480620007ab6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063722713f7116100b8578063a42c0af91161007c578063a42c0af9146103a1578063a7d9ad6a146103d1578063a9059cbb14610401578063af7e47c114610431578063dd62ed3e1461044d578063f2fde38b1461047d57610142565b8063722713f7146102e75780638269bcc3146103055780638da5cb5b1461033557806395d89b411461035357806396b2db381461037157610142565b806318160ddd1161010a57806318160ddd1461021157806323b872dd1461022f57806326a9b3f11461025f578063313ce5671461028f57806370a08231146102ad578063715018a6146102dd57610142565b8063043d20851461014757806306fdde031461017757806308a2032a14610195578063095ea7b3146101c557806313691c76146101f5575b600080fd5b610161600480360381019061015c9190612197565b610499565b60405161016e91906121d3565b60405180910390f35b61017f610501565b60405161018c919061227e565b60405180910390f35b6101af60048036038101906101aa91906122c4565b610593565b6040516101bc9190612378565b60405180910390f35b6101df60048036038101906101da91906123bf565b6105d7565b6040516101ec919061241a565b60405180910390f35b61020f600480360381019061020a9190612475565b6105fa565b005b610219610611565b60405161022691906124c4565b60405180910390f35b610249600480360381019061024491906124df565b610616565b6040516102569190612378565b60405180910390f35b6102796004803603810190610274919061255e565b610643565b604051610286919061241a565b60405180910390f35b6102976107bb565b6040516102a491906125ba565b60405180910390f35b6102c760048036038101906102c29190612197565b6107d2565b6040516102d491906125e4565b60405180910390f35b6102e561081e565b005b6102ef610832565b6040516102fc919061260e565b60405180910390f35b61031f600480360381019061031a9190612197565b610849565b60405161032c919061241a565b60405180910390f35b61033d610943565b60405161034a91906121d3565b60405180910390f35b61035b61096d565b604051610368919061227e565b60405180910390f35b61038b6004803603810190610386919061255e565b6109ff565b604051610398919061260e565b60405180910390f35b6103bb60048036038101906103b69190612629565b610b35565b6040516103c8919061241a565b60405180910390f35b6103eb60048036038101906103e69190612629565b610b6f565b6040516103f89190612378565b60405180910390f35b61041b600480360381019061041691906123bf565b610ba7565b6040516104289190612378565b60405180910390f35b61044b60048036038101906104469190612629565b610bc8565b005b61046760048036038101906104629190612685565b610bf6565b6040516104749190612716565b60405180910390f35b61049760048036038101906104929190612197565b610cab565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606004805461051090612760565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90612760565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b5050505050905090565b60008061059e610d2e565b905060006105b4846105af90612968565b610d36565b90506105c1868383610ddd565b6105cc868683610f32565b925050509392505050565b6000806105e2610d2e565b90506105ef81858561102b565b600191505092915050565b61060c8261060783611278565b61131f565b505050565b600090565b600080610621610d2e565b905061062e858285610ddd565b610639858585610f32565b9150509392505050565b600080610656610651610d2e565b6113a6565b905082156107095760006002600061066c610d2e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506106fb6106f5826000015461144b565b83611476565b8160010181905550506107b0565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610754610d2e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506107a66107a0826000015461144b565b83611476565b8160020181905550505b600191505092915050565b6000600660149054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b610826611535565b61083060006115b3565b565b600061084461083f610d2e565b611679565b905090565b60008061085c610857610d2e565b611679565b90508260008061086a610d2e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108ec8184611476565b600160006108f8610d2e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001915050919050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461097c90612760565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890612760565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b5050505050905090565b60008115610a9d57610a9660026000610a16610d2e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461144b565b9050610b2f565b610b2c600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610ae9610d2e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461144b565b90505b92915050565b600080610b40610d2e565b90506000610b5684610b5190612968565b610d36565b9050610b6382868361102b565b60019250505092915050565b600080610b7a610d2e565b90506000610b9084610b8b90612968565b610d36565b9050610b9d828683610f32565b9250505092915050565b600080610bb2610d2e565b9050610bbf818585610f32565b91505092915050565b610bd0611535565b6000610be482610bdf90612968565b610d36565b9050610bf083826116d2565b50505050565b610bfe6120ea565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905092915050565b610cb3611535565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d19906129ed565b60405180910390fd5b610d2b816115b3565b50565b600033905090565b6000606473ffffffffffffffffffffffffffffffffffffffff1663e4f36e10600480811115610d6857610d67612a0d565b5b60f81b846000015185602001516040518463ffffffff1660e01b8152600401610d9393929190612acc565b6020604051808303816000875af1158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd69190612b36565b9050919050565b6000610e2a600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461144b565b90506000610eb6600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461144b565b90506000610ed482610ecf67ffffffffffffffff611278565b611759565b90506000610ee284866117f0565b90506000610ef084876117f0565b90506000610f1a610f0a85610f058686611887565b611887565b610f14878a61191e565b876119b5565b9050610f2789898361102b565b505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fa55760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f9c91906121d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110175760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161100e91906121d3565b60405180910390fd5b611022848484611a4f565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361109d5760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161109491906121d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361110f5760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161110691906121d3565b60405180910390fd5b600061111a82611c25565b90506000611127856113a6565b905060006111358483611476565b9050611140856113a6565b9150600061114e8584611476565b9050604051806060016040528085815260200183815260200182815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a78484604051611267929190612b63565b60405180910390a350505050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b606004808111156112aa576112a9612a0d565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b81526004016112d5929190612b8c565b6020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113189190612b36565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113925760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161138991906121d3565b60405180910390fd5b61139e83600084611a4f565b905092915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611442578290505b80915050919050565b60008082036114655761145e6000611278565b9050611471565b61146e82611cc2565b90505b919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e686004808111156114a8576114a7612a0d565b5b60f81b85856040516020016114bd9190612bfd565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016114ea93929190612acc565b6020604051808303816000875af1158015611509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152d9190612b36565b905092915050565b61153d610d2e565b73ffffffffffffffffffffffffffffffffffffffff1661155b610943565b73ffffffffffffffffffffffffffffffffffffffff16146115b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a890612c64565b60405180910390fd5b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506116ca8161144b565b915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117455760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161173c91906121d3565b60405180910390fd5b61175160008484611a4f565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16637c12a1eb6117856004806000611d5f565b85856040518463ffffffff1660e01b81526004016117a593929190612cbf565b6020604051808303816000875af11580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190612b36565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663dd14869361181c6004806000611d5f565b85856040518463ffffffff1660e01b815260040161183c93929190612cbf565b6020604051808303816000875af115801561185b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187f9190612b36565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663fb7da35f6118b36000806000611d5f565b85856040518463ffffffff1660e01b81526004016118d393929190612cbf565b6020604051808303816000875af11580156118f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119169190612b36565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663371d1bf261194a6004806000611d5f565b85856040518463ffffffff1660e01b815260040161196a93929190612cbf565b6020604051808303816000875af1158015611989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ad9190612b36565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff166320cc408d6119e16004806000611d5f565b8686866040518563ffffffff1660e01b8152600401611a039493929190612cf6565b6020604051808303816000875af1158015611a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a469190612b36565b90509392505050565b60008060008390506000611a636001611dc0565b9050600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603611ae3576000611aa660035461144b565b9050611ab28187611e74565b9050611abd81611c25565b6003819055506000611ace88611679565b9050611ada8188611e74565b94505050611b30565b6000611aee88611679565b90506000611afb88611679565b90506000611b0a83838a611f0b565b809650819850829350505050611b208a82611fc0565b611b2a868361191e565b94505050505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611b94576000611b7160035461144b565b9050611b7d818461191e565b9050611b8881611c25565b60038190555050611b9f565b611b9e8684611fc0565b5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44611bf8858b611476565b611c02868b611476565b604051611c10929190612b63565b60405180910390a38093505050509392505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c02600480811115611c5757611c56612a0d565b5b60f81b846040518363ffffffff1660e01b8152600401611c78929190612b8c565b6020604051808303816000875af1158015611c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbb9190612b36565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e5600480811115611cf457611cf3612a0d565b5b60f81b846040518363ffffffff1660e01b8152600401611d15929190612b8c565b6020604051808303816000875af1158015611d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d589190612b36565b9050919050565b6000816002811115611d7457611d73612a0d565b5b60ff166008846004811115611d8c57611d8b612a0d565b5b61ffff16901b61ffff166010866004811115611dab57611daa612a0d565b5b62ffffff16901b171760e81b90509392505050565b60008082611dcf576000611dd2565b60015b60ff169050606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060006004811115611e0857611e07612a0d565b5b60f81b836040518363ffffffff1660e01b8152600401611e29929190612b8c565b6020604051808303816000875af1158015611e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6c9190612b36565b915050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16638c5d0150611ea06004806000611d5f565b85856040518463ffffffff1660e01b8152600401611ec093929190612cbf565b6020604051808303816000875af1158015611edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f039190612b36565b905092915050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d28611f4060048060046000612032565b8b8b8b6040518563ffffffff1660e01b8152600401611f629493929190612d76565b6060604051808303816000875af1158015611f81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa59190612dbb565b92509250925082828295509550955050505093509350939050565b6000611fcb836113a6565b9050611fd782826120b7565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155905050505050565b600081600281111561204757612046612a0d565b5b60ff16600884600481111561205f5761205e612a0d565b5b61ffff16901b61ffff16601086600481111561207e5761207d612a0d565b5b62ffffff16901b62ffffff16601888600481111561209f5761209e612a0d565b5b63ffffffff16901b17171760e01b9050949350505050565b6120bf61210b565b6120c883611c25565b8160000181815250506120db8383611476565b81602001818152505092915050565b60405180606001604052806000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061216482612139565b9050919050565b61217481612159565b811461217f57600080fd5b50565b6000813590506121918161216b565b92915050565b6000602082840312156121ad576121ac61212f565b5b60006121bb84828501612182565b91505092915050565b6121cd81612159565b82525050565b60006020820190506121e860008301846121c4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561222857808201518184015260208101905061220d565b60008484015250505050565b6000601f19601f8301169050919050565b6000612250826121ee565b61225a81856121f9565b935061226a81856020860161220a565b61227381612234565b840191505092915050565b600060208201905081810360008301526122988184612245565b905092915050565b600080fd5b6000604082840312156122bb576122ba6122a0565b5b81905092915050565b6000806000606084860312156122dd576122dc61212f565b5b60006122eb86828701612182565b93505060206122fc86828701612182565b925050604084013567ffffffffffffffff81111561231d5761231c612134565b5b612329868287016122a5565b9150509250925092565b6000819050919050565b6000819050919050565b600061236261235d61235884612333565b61233d565b612333565b9050919050565b61237281612347565b82525050565b600060208201905061238d6000830184612369565b92915050565b61239c81612333565b81146123a757600080fd5b50565b6000813590506123b981612393565b92915050565b600080604083850312156123d6576123d561212f565b5b60006123e485828601612182565b92505060206123f5858286016123aa565b9150509250929050565b60008115159050919050565b612414816123ff565b82525050565b600060208201905061242f600083018461240b565b92915050565b600067ffffffffffffffff82169050919050565b61245281612435565b811461245d57600080fd5b50565b60008135905061246f81612449565b92915050565b6000806040838503121561248c5761248b61212f565b5b600061249a85828601612182565b92505060206124ab85828601612460565b9150509250929050565b6124be81612333565b82525050565b60006020820190506124d960008301846124b5565b92915050565b6000806000606084860312156124f8576124f761212f565b5b600061250686828701612182565b935050602061251786828701612182565b9250506040612528868287016123aa565b9150509250925092565b61253b816123ff565b811461254657600080fd5b50565b60008135905061255881612532565b92915050565b600080604083850312156125755761257461212f565b5b600061258385828601612182565b925050602061259485828601612549565b9150509250929050565b600060ff82169050919050565b6125b48161259e565b82525050565b60006020820190506125cf60008301846125ab565b92915050565b6125de81612347565b82525050565b60006020820190506125f960008301846125d5565b92915050565b61260881612347565b82525050565b600060208201905061262360008301846125ff565b92915050565b600080604083850312156126405761263f61212f565b5b600061264e85828601612182565b925050602083013567ffffffffffffffff81111561266f5761266e612134565b5b61267b858286016122a5565b9150509250929050565b6000806040838503121561269c5761269b61212f565b5b60006126aa85828601612182565b92505060206126bb85828601612182565b9150509250929050565b6126ce81612347565b82525050565b6060820160008201516126ea60008501826126c5565b5060208201516126fd60208501826126c5565b50604082015161271060408501826126c5565b50505050565b600060608201905061272b60008301846126d4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061277857607f821691505b60208210810361278b5761278a612731565b5b50919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6127ce82612234565b810181811067ffffffffffffffff821117156127ed576127ec612796565b5b80604052505050565b6000612800612125565b905061280c82826127c5565b919050565b600080fd5b61281f81612333565b811461282a57600080fd5b50565b60008135905061283c81612816565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561286757612866612796565b5b61287082612234565b9050602081019050919050565b82818337600083830152505050565b600061289f61289a8461284c565b6127f6565b9050828152602081018484840111156128bb576128ba612847565b5b6128c684828561287d565b509392505050565b600082601f8301126128e3576128e2612842565b5b81356128f384826020860161288c565b91505092915050565b60006040828403121561291257612911612791565b5b61291c60406127f6565b9050600061292c8482850161282d565b600083015250602082013567ffffffffffffffff8111156129505761294f612811565b5b61295c848285016128ce565b60208301525092915050565b600061297436836128fc565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006129d76026836121f9565b91506129e28261297b565b604082019050919050565b60006020820190508181036000830152612a06816129ca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b612a7181612a3c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000612a9e82612a77565b612aa88185612a82565b9350612ab881856020860161220a565b612ac181612234565b840191505092915050565b6000606082019050612ae16000830186612a68565b612aee60208301856124b5565b8181036040830152612b008184612a93565b9050949350505050565b612b1381612333565b8114612b1e57600080fd5b50565b600081519050612b3081612b0a565b92915050565b600060208284031215612b4c57612b4b61212f565b5b6000612b5a84828501612b21565b91505092915050565b6000604082019050612b7860008301856125d5565b612b8560208301846125d5565b9392505050565b6000604082019050612ba16000830185612a68565b612bae60208301846124b5565b9392505050565b60008160601b9050919050565b6000612bcd82612bb5565b9050919050565b6000612bdf82612bc2565b9050919050565b612bf7612bf282612159565b612bd4565b82525050565b6000612c098284612be6565b60148201915081905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c4e6020836121f9565b9150612c5982612c18565b602082019050919050565b60006020820190508181036000830152612c7d81612c41565b9050919050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b612cb981612c84565b82525050565b6000606082019050612cd46000830186612cb0565b612ce160208301856124b5565b612cee60408301846124b5565b949350505050565b6000608082019050612d0b6000830187612cb0565b612d1860208301866124b5565b612d2560408301856124b5565b612d3260608301846124b5565b95945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612d7081612d3b565b82525050565b6000608082019050612d8b6000830187612d67565b612d9860208301866124b5565b612da560408301856124b5565b612db260608301846124b5565b95945050505050565b600080600060608486031215612dd457612dd361212f565b5b6000612de286828701612b21565b9350506020612df386828701612b21565b9250506040612e0486828701612b21565b915050925092509256fea2646970667358221220373ed2ed40f21332b62f0222ef96bbac8d7e08acabddf4f3a877e60bcb4af2d864736f6c63430008130033";

type PrivateERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateERC20Token__factory extends ContractFactory {
  constructor(...args: PrivateERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals_,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimals_,
      initialOwner,
      overrides || {}
    ) as Promise<
      PrivateERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateERC20Token__factory {
    return super.connect(runner) as PrivateERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateERC20TokenInterface {
    return new Interface(_abi) as PrivateERC20TokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateERC20Token {
    return new Contract(address, _abi, runner) as unknown as PrivateERC20Token;
  }
}
